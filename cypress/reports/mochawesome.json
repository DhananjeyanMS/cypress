{
  "stats": {
    "suites": 7,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-02T19:49:00.903Z",
    "end": "2024-11-02T19:49:26.604Z",
    "duration": 25701,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "96d3765f-1e57-42a2-9bf9-ded9d18d960a",
      "title": "",
      "fullFile": "cypress\\e2e\\login_spec.cy.js",
      "file": "cypress\\e2e\\login_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e59c9632-38cb-4ceb-b91e-999cf84d634c",
          "title": "Login Functionality",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "55649aac-7104-4798-b84e-eb676eb99c8c",
              "title": "Valid Login Scenarios",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Allows a user to log in with valid credentials",
                  "fullTitle": "Login Functionality Valid Login Scenarios Allows a user to log in with valid credentials",
                  "timedOut": null,
                  "duration": 828,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/login'); // Visit login page\ncy.loginWithUI(this.userData.validUser.username, this.userData.validUser.password); // Perform login\ncy.url().should('include', '/'); // Verify URL after login\ncy.contains(`Welcome, ${this.userData.validUser.username}`); // Confirm successful login message",
                  "err": {},
                  "uuid": "db1b0fd2-5068-44a0-9a04-551e5b154aa5",
                  "parentUUID": "55649aac-7104-4798-b84e-eb676eb99c8c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db1b0fd2-5068-44a0-9a04-551e5b154aa5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 828,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "71ce2bd5-49aa-4282-bed9-9335724bd422",
              "title": "Invalid Login Scenarios",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Prevents login with invalid credentials",
                  "fullTitle": "Login Functionality Invalid Login Scenarios Prevents login with invalid credentials",
                  "timedOut": null,
                  "duration": 4730,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.loginWithUI(this.userData.validUser.username, this.userData.invalidUser.password); // Attempt login with invalid password\ncy.on('window:alert', text => {\n  expect(text).to.include('Invalid password'); // Check for invalid password alert\n});",
                  "err": {},
                  "uuid": "0615baa0-6d82-41a2-bbaa-79f9987412e4",
                  "parentUUID": "71ce2bd5-49aa-4282-bed9-9335724bd422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Prevents login for non-existing user",
                  "fullTitle": "Login Functionality Invalid Login Scenarios Prevents login for non-existing user",
                  "timedOut": null,
                  "duration": 772,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.loginWithUI(this.userData.invalidUser.username, this.userData.invalidUser.password); // Attempt login with non-existing user\ncy.on('window:alert', text => {\n  expect(text).to.include('User not found'); // Check for \"User not found\" alert\n});",
                  "err": {},
                  "uuid": "0a0c6a2e-178e-4782-813a-74b04afe70d6",
                  "parentUUID": "71ce2bd5-49aa-4282-bed9-9335724bd422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Prevents login for inactive user",
                  "fullTitle": "Login Functionality Invalid Login Scenarios Prevents login for inactive user",
                  "timedOut": null,
                  "duration": 692,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.loginWithUI(this.userData.inactiveUser.username, this.userData.inactiveUser.password); // Attempt login with inactive user\ncy.on('window:alert', text => {\n  expect(text).to.include('Account is locked. Please contact support.'); // Check for account locked alert\n});",
                  "err": {},
                  "uuid": "3db519ec-013f-47f3-a311-f2257af35bc2",
                  "parentUUID": "71ce2bd5-49aa-4282-bed9-9335724bd422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Shows error for empty credentials",
                  "fullTitle": "Login Functionality Invalid Login Scenarios Shows error for empty credentials",
                  "timedOut": null,
                  "duration": 859,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Attempt login with empty password\ncy.loginWithUI(this.userData.inactiveUser.username, \"\");\ncy.get('button[type=\"submit\"]').click();\ncy.url().should('include', '/login'); // Ensure it stays on login page\ncy.get('#password:invalid').should('have.length', 1); // Check password field validation\ncy.get('#password:invalid').then(input => {\n  expect(input[0].validationMessage).to.eq(\"Please fill out this field.\"); // Verify validation message\n});\n// Attempt login with empty username\ncy.loginWithUI(\"\", this.userData.inactiveUser.password);\ncy.get('button[type=\"submit\"]').click();\ncy.get('#email:invalid').should('have.length', 1); // Check email field validation\ncy.get('#email:invalid').then(input => {\n  expect(input[0].validationMessage).to.eq(\"Please fill out this field.\");\n});",
                  "err": {},
                  "uuid": "a4cb4e7d-9e09-44f3-9e93-e546dbf6eb48",
                  "parentUUID": "71ce2bd5-49aa-4282-bed9-9335724bd422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Shows error for invalid email format",
                  "fullTitle": "Login Functionality Invalid Login Scenarios Shows error for invalid email format",
                  "timedOut": null,
                  "duration": 508,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.loginWithUI(this.userData.invalidemail.username, \"\"); // Attempt login with invalid email format\ncy.get('button[type=\"submit\"]').click();\ncy.get('#email:invalid').should('have.length', 1); // Check email format validation\ncy.get('#email:invalid').then(input => {\n  expect(input[0].validationMessage).to.eq(\"Please include an '@' in the email address. 'lockedexample.com' is missing an '@'.\");\n});",
                  "err": {},
                  "uuid": "a0346a52-babd-4b67-9108-ef506f534a74",
                  "parentUUID": "71ce2bd5-49aa-4282-bed9-9335724bd422",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0615baa0-6d82-41a2-bbaa-79f9987412e4",
                "0a0c6a2e-178e-4782-813a-74b04afe70d6",
                "3db519ec-013f-47f3-a311-f2257af35bc2",
                "a4cb4e7d-9e09-44f3-9e93-e546dbf6eb48",
                "a0346a52-babd-4b67-9108-ef506f534a74"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7561,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "36f6a794-4120-4d63-9fbc-c99d37e90f19",
              "title": "Session Management and Security",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Allows the user to log out successfully",
                  "fullTitle": "Login Functionality Session Management and Security Allows the user to log out successfully",
                  "timedOut": null,
                  "duration": 748,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.loginWithUI(this.userData.validUser.username, this.userData.validUser.password); // Login with valid credentials\ncy.contains(`Welcome, ${this.userData.validUser.username}`);\ncy.get('a[href=\"/logout\"]').click(); // Perform logout\ncy.on('window:alert', text => {\n  expect(text).to.include('You have been logged out'); // Verify logout alert\n});\ncy.url().should('include', '/login'); // Check redirection to login page",
                  "err": {},
                  "uuid": "6f3253ca-10bc-475c-903c-9093c39a1324",
                  "parentUUID": "36f6a794-4120-4d63-9fbc-c99d37e90f19",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Retains session with Remember Me functionality",
                  "fullTitle": "Login Functionality Session Management and Security Retains session with Remember Me functionality",
                  "timedOut": null,
                  "duration": 813,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#email').type(this.userData.validUser.username);\ncy.get('#password').type(this.userData.validUser.password);\ncy.get('#remember').check(); // Select \"Remember Me\" option\ncy.get('button[type=\"submit\"]').click();\ncy.url().should('include', '/'); // Check successful login\ncy.reload(); // Simulate page reload\ncy.visit('/'); // Revisit the dashboard\ncy.url().should('include', '/'); // Verify session retention\ncy.contains(`Welcome, ${this.userData.validUser.username}`);",
                  "err": {},
                  "uuid": "f7d5a1bc-17aa-4072-af93-4587d4ddaced",
                  "parentUUID": "36f6a794-4120-4d63-9fbc-c99d37e90f19",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6f3253ca-10bc-475c-903c-9093c39a1324",
                "f7d5a1bc-17aa-4072-af93-4587d4ddaced"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1561,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2f4ea149-b71c-4878-b7a9-020072a4d4ff",
              "title": "UI and Accessibility",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Allows login form navigation with keyboard",
                  "fullTitle": "Login Functionality UI and Accessibility Allows login form navigation with keyboard",
                  "timedOut": null,
                  "duration": 540,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/login');\ncy.get('#email').focus().type(this.userData.validUser.username);\ncy.realPress('Tab'); // Move to next field with Tab key\ncy.focused().should('have.attr', 'id', 'password').type(this.userData.validUser.password); // Type password in focused field\ncy.realPress('Enter'); // Submit form with Enter key\ncy.url().should('include', '/'); // Verify login success\ncy.contains(`Welcome, ${this.userData.validUser.username}`);",
                  "err": {},
                  "uuid": "b0f08b71-8be6-47de-9e20-5dc68e91cc15",
                  "parentUUID": "2f4ea149-b71c-4878-b7a9-020072a4d4ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b0f08b71-8be6-47de-9e20-5dc68e91cc15"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 540,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "91c70e3b-c169-4f56-b69d-dc1e1d83eeed",
              "title": "Password Management",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Handles password reset flow",
                  "fullTitle": "Login Functionality Password Management Handles password reset flow",
                  "timedOut": null,
                  "duration": 75,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/reset_password'); // Visit password reset page\ncy.on('window:alert', text => {\n  expect(text).to.include('Password reset functionality is not implemented yet.'); // Check for reset alert\n});\ncy.url().should('include', '/login'); // Ensure redirection to login page",
                  "err": {},
                  "uuid": "4b8580bc-8e12-4b7d-aa7c-4d5e1bcca19e",
                  "parentUUID": "91c70e3b-c169-4f56-b69d-dc1e1d83eeed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b8580bc-8e12-4b7d-aa7c-4d5e1bcca19e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 75,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "227b6fb1-b4b5-4b10-86d1-3a9c8210501e",
              "title": "Security - Login Lockout Mechanism",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "login attempt 1 with invalid credentials",
                  "fullTitle": "Login Functionality Security - Login Lockout Mechanism login attempt 1 with invalid credentials",
                  "timedOut": null,
                  "duration": 4692,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const {\n  username\n} = this.userData.validUser;\ncy.loginWithUI(username, 'wrongpassword'); // Attempt login with incorrect password\ncy.on('window:alert', text => {\n  expect(text).to.include('Invalid password'); // Verify alert for invalid password\n});",
                  "err": {},
                  "uuid": "b16ebdef-ce36-4dc7-9ce2-81a2d22152ca",
                  "parentUUID": "227b6fb1-b4b5-4b10-86d1-3a9c8210501e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "login attempt 2 with invalid credentials",
                  "fullTitle": "Login Functionality Security - Login Lockout Mechanism login attempt 2 with invalid credentials",
                  "timedOut": null,
                  "duration": 4685,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const {\n  username\n} = this.userData.validUser;\ncy.loginWithUI(username, 'wrongpassword'); // Attempt login with incorrect password\ncy.on('window:alert', text => {\n  expect(text).to.include('Invalid password'); // Verify alert for invalid password\n});",
                  "err": {},
                  "uuid": "69f269bb-40d0-435d-b883-7b86fbf27258",
                  "parentUUID": "227b6fb1-b4b5-4b10-86d1-3a9c8210501e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "login attempt 3 with invalid credentials",
                  "fullTitle": "Login Functionality Security - Login Lockout Mechanism login attempt 3 with invalid credentials",
                  "timedOut": null,
                  "duration": 4705,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const {\n  username\n} = this.userData.validUser;\ncy.loginWithUI(username, 'wrongpassword'); // Attempt login with incorrect password\ncy.on('window:alert', text => {\n  expect(text).to.include('Invalid password'); // Verify alert for invalid password\n});",
                  "err": {},
                  "uuid": "d517b642-6024-43a8-b831-19371c47c510",
                  "parentUUID": "227b6fb1-b4b5-4b10-86d1-3a9c8210501e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Locks the user out after multiple failed login attempts",
                  "fullTitle": "Login Functionality Security - Login Lockout Mechanism Locks the user out after multiple failed login attempts",
                  "timedOut": null,
                  "duration": 714,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const {\n  username\n} = this.userData.validUser;\ncy.loginWithUI(username, 'wrongpassword'); // Attempt login after 3 failed attempts\ncy.on('window:alert', text => {\n  expect(text).to.include('Account is locked due to too many failed attempts.'); // Verify lockout alert\n});",
                  "err": {},
                  "uuid": "19178470-8658-44be-aa47-fb026496bd65",
                  "parentUUID": "227b6fb1-b4b5-4b10-86d1-3a9c8210501e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b16ebdef-ce36-4dc7-9ce2-81a2d22152ca",
                "69f269bb-40d0-435d-b883-7b86fbf27258",
                "d517b642-6024-43a8-b831-19371c47c510",
                "19178470-8658-44be-aa47-fb026496bd65"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14796,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}